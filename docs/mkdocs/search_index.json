{
    "docs": [
        {
            "location": "/",
            "text": "Documentation of pacman-mirrors\n\n\nEnhanced pacman-mirrors for Manjaro Linux\n\n\nCommands\n\n\n-h\n, \n--help\n\nShow the help message.\n\n\n-g\n, \n--generate\n\nGenerate a new mirrorlist.\n\n\n-m [method]\n, \n--method [method]\n\nChoose the generation method:\n\n\n\n\nrank\n\n\nrandom\n\n\n\n\n-b [branch]\n, \n--branch [branch]\n\nChoose the branch to use:\n\n\n\n\nstable\n\n\ntesting\n\n\nunstable\n\n\n\n\n-c COUNTRY [COUNTRY ...]\n, \n--country COUNTRY [COUNTRY ...]\n\nSpecifiy country or list of countries separated by comma or space:\n\n\n\n\nFrance\n\n\nFrance, Germany, Austria\n\n\nFrance Germany Austria\n\n\n\n\nTo reset a custom mirror file\n\n\n\n\nall\n\n\n\n\n--geoip\n\nDetect country by using geolocation.\n\n\n-d\n, \n--mirror_dir\n\nChange directory of mirrors to use.\n\n\n-f [n]\n, \n--fasttrack [n]\n\nGenerates an updated and responsive mirrorlist of [n] mirrors.\n\n\n-l\n, \n--list\n\nLists available mirror countries\n\n\n-o\n, \n--output\n\nChange path of the output file.\n\n\n-t\n, \n--timeout\n\nChange the server maximum waiting time.\n\n\n--no-update\n\nDon't generate mirrorlist.\n\n\n-i\n, \n--interactive\n\nLaunch a graphical tool to select mirrors to generate a custom mirrorlist.\n\n\n--default\n\nUsed in conjunction with \n-i/--interactive\n ignores custom mirrorfile,\n\nloading the default mirrorfile, allowing to create a new custom mirrorfile \nand executes the ranking/randomizing process after the selection of mirrors.\n\n\n-v\n, \n--version\n\nShow the version of pacman-mirrors.\n\n\n--quiet\n\nMake pacman-mirrors silent.\n\n\n-a\n, \n--api\n [--prefix] [{--get-branch | --set-branch}] [--protocols PROTO [PROTO ...]] \n- \n--prefix\n for pacman-mirrors file-handling eg. /mnt/install or $mnt.\n- \n--get-branch\n returns branch from config in prefix\nconfig_file\n. \n  * Ignored if \n--branch\n is supplied.\n- \n--set-branch\n writes branch specified in \n--branch\n to prefix\nconfig_file\n.\n  * Ignored if \n--branch\n is not supplied.\n- \n--protocols\n write the specified protocols to prefix\npacman-mirrors.conf\n.\n\n\nContent of pacman-mirrors.conf\n\n\n##\n## /etc/pacman-mirrors.conf\n##\n\n## Branch Pacman should use (stable, testing, unstable)\n# Branch = stable\n\n## Generation method\n## 1) rank   - rank mirrors depending on their access time\n## 2) random - randomly generate the output mirrorlist\n# Method = rank\n\n## Define protocols and priority\n##   separated by comma 'https,http' or 'http,https'\n##             or space 'https http' or 'http https'\n## ATM available protocols are: http, https, ftp\n## Not specifying a protocol will ban the protocol from being used\n## Empty means all in reversed alphabetic order\n## If a mirror has more than one protocol defined \n##  only the first is written to the mirrorlist\n# Protocols =\n\n## Specify to use only mirrors from a specific country.\n## Can add multiple countries\n##   separated by comma 'Germany,France,Belgium'\n##             or space 'Germany France Belgium'\n## Get a list of all available counties with 'pacman-mirrors -l'\n## Empty means all\n# OnlyCountry =\n\n## Mirrors directory\n# MirrorlistsDir = /var/lib/pacman-mirrors\n\n## Output file\n# OutputMirrorlist = /etc/pacman.d/mirrorlist\n\n## When set to True prevents the regeneration of the mirrorlist if\n## pacman-mirrors is invoked with the --no-update argument.\n## Useful if you don't want the mirrorlist regenerated after a\n## pacman-mirrors package upgrade.\n# NoUpdate = False\n\n## When set to False - all certificates are accepted.\n## Use only if you fully trust all ssl-enabled mirrors.\n# SSLVerify = True",
            "title": "Home"
        },
        {
            "location": "/#documentation-of-pacman-mirrors",
            "text": "Enhanced pacman-mirrors for Manjaro Linux",
            "title": "Documentation of pacman-mirrors"
        },
        {
            "location": "/#commands",
            "text": "-h ,  --help \nShow the help message.  -g ,  --generate \nGenerate a new mirrorlist.  -m [method] ,  --method [method] \nChoose the generation method:   rank  random   -b [branch] ,  --branch [branch] \nChoose the branch to use:   stable  testing  unstable   -c COUNTRY [COUNTRY ...] ,  --country COUNTRY [COUNTRY ...] \nSpecifiy country or list of countries separated by comma or space:   France  France, Germany, Austria  France Germany Austria   To reset a custom mirror file   all   --geoip \nDetect country by using geolocation.  -d ,  --mirror_dir \nChange directory of mirrors to use.  -f [n] ,  --fasttrack [n] \nGenerates an updated and responsive mirrorlist of [n] mirrors.  -l ,  --list \nLists available mirror countries  -o ,  --output \nChange path of the output file.  -t ,  --timeout \nChange the server maximum waiting time.  --no-update \nDon't generate mirrorlist.  -i ,  --interactive \nLaunch a graphical tool to select mirrors to generate a custom mirrorlist.  --default \nUsed in conjunction with  -i/--interactive  ignores custom mirrorfile, \nloading the default mirrorfile, allowing to create a new custom mirrorfile \nand executes the ranking/randomizing process after the selection of mirrors.  -v ,  --version \nShow the version of pacman-mirrors.  --quiet \nMake pacman-mirrors silent.  -a ,  --api  [--prefix] [{--get-branch | --set-branch}] [--protocols PROTO [PROTO ...]] \n-  --prefix  for pacman-mirrors file-handling eg. /mnt/install or $mnt.\n-  --get-branch  returns branch from config in prefix config_file . \n  * Ignored if  --branch  is supplied.\n-  --set-branch  writes branch specified in  --branch  to prefix config_file .\n  * Ignored if  --branch  is not supplied.\n-  --protocols  write the specified protocols to prefix pacman-mirrors.conf .",
            "title": "Commands"
        },
        {
            "location": "/#content-of-pacman-mirrorsconf",
            "text": "##\n## /etc/pacman-mirrors.conf\n##\n\n## Branch Pacman should use (stable, testing, unstable)\n# Branch = stable\n\n## Generation method\n## 1) rank   - rank mirrors depending on their access time\n## 2) random - randomly generate the output mirrorlist\n# Method = rank\n\n## Define protocols and priority\n##   separated by comma 'https,http' or 'http,https'\n##             or space 'https http' or 'http https'\n## ATM available protocols are: http, https, ftp\n## Not specifying a protocol will ban the protocol from being used\n## Empty means all in reversed alphabetic order\n## If a mirror has more than one protocol defined \n##  only the first is written to the mirrorlist\n# Protocols =\n\n## Specify to use only mirrors from a specific country.\n## Can add multiple countries\n##   separated by comma 'Germany,France,Belgium'\n##             or space 'Germany France Belgium'\n## Get a list of all available counties with 'pacman-mirrors -l'\n## Empty means all\n# OnlyCountry =\n\n## Mirrors directory\n# MirrorlistsDir = /var/lib/pacman-mirrors\n\n## Output file\n# OutputMirrorlist = /etc/pacman.d/mirrorlist\n\n## When set to True prevents the regeneration of the mirrorlist if\n## pacman-mirrors is invoked with the --no-update argument.\n## Useful if you don't want the mirrorlist regenerated after a\n## pacman-mirrors package upgrade.\n# NoUpdate = False\n\n## When set to False - all certificates are accepted.\n## Use only if you fully trust all ssl-enabled mirrors.\n# SSLVerify = True",
            "title": "Content of pacman-mirrors.conf"
        },
        {
            "location": "/installation/",
            "text": "Installation\n\n\nAt the command line:\n\n\n$ easy_install pacman-mirrors\n\n\n\nOr, if you have virtualenvwrapper installed::\n\n\n$ mkvirtualenv pacman-mirrors\n$ pip install pacman-mirrors",
            "title": "Installation"
        },
        {
            "location": "/installation/#installation",
            "text": "At the command line:  $ easy_install pacman-mirrors  Or, if you have virtualenvwrapper installed::  $ mkvirtualenv pacman-mirrors\n$ pip install pacman-mirrors",
            "title": "Installation"
        },
        {
            "location": "/usage/",
            "text": "Usage\n\n\nTo use pacman-mirrors in a Python project:\n\n\nimport pacman_mirrors",
            "title": "Usage"
        },
        {
            "location": "/usage/#usage",
            "text": "To use pacman-mirrors in a Python project:  import pacman_mirrors",
            "title": "Usage"
        }
    ]
}